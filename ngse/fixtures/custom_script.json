[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Project Review",
  "modified": "2020-01-31 12:35:23.048026",
  "name": "Project Review-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('project','project_name','project_name')\nfrappe.ui.form.on('Project Review', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tcur_frm.set_value(\"due_date\",frappe.datetime.add_days(cur_frm.doc.raised_date,3))\n\t\t\n\t}\n})\n\ncur_frm.fields_dict['jobmaster'].get_query = function(doc, cdt, cdn) {\n\treturn {\n\t\tfilters:{'project': doc.project_id}\n\t}\n}\n\nfrappe.ui.form.on(\"Project Review\",{\n\tvalidate:function(frm){\n\t\tfrm.set_value(\"naming_series\",\"\");\n\t\tif(frm.doc.type == \"Material\"){\n\t\t\tfrm.set_value(\"naming_series\",\"MR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Design\"){\n\t\t\tfrm.set_value(\"naming_series\",\"DR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Production\"){\n\t\t\tfrm.set_value(\"naming_series\",\"PR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Quality\"){\n\t\t\tfrm.set_value(\"naming_series\",\"QR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Sales\"){\n\t\t\tfrm.set_value(\"naming_series\",\"SR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Payment\"){\n\t\t\tfrm.set_value(\"naming_series\",\"PY.#####\")\n\t\t}\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Project",
  "modified": "2020-06-15 20:28:54.071033",
  "name": "Project-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\n\ncur_frm.fields_dict['template'].get_query = function(doc, cdt, cdn) {\n\treturn {\n\t\tfilters:{'technical_data_sheet': 1}\n\t}\n}\n\n\n//frappe.ui.form.on(\"Project\", \"refresh\", function(frm) {\n//frm.fields_dict['project_review'].grid.get_field('project_1').get_query = function(doc, cdt, cdn) {\n//child = locals[cdt][cdn];\n//\t\t\treturn{\t\n//\t\tfilters:[\n//\t\t\t['project_1', '=', child.project]\n//\t\t]\n//\t}\n//}\n//});\nfrappe.ui.form.on(\"Project\",{\n    update_review_list:function(){\n\n        console.log(\"hi\")\n\t\tfrappe.call({\n\t\t\tmethod: \"ngse.custom_method.get_pending_project_review\",\n\t\t\targs:{'project_id':cur_frm.doc.name},\n\t\t\tcallback: (r) => {\n\t\t\t\t\t\tif(r.message) {\n\t\t\t\tconsole.log(r.message)\n\t\t\t\t\tcur_frm.clear_table(\"project_review\");\n\t\t\t\t\t\tr.message.forEach(function(element) {\n\t\t\t\t\t\t\tvar c = cur_frm.add_child(\"project_review\");\n\t\t\t\t\t\t\tc.project_1 = element.name;\n\t\t\t\t\t\t\tconsole.log(element.name)\n\t\t\t\t\t\t\tc.project = cur_frm.doc.name\n\t\t\t\t\t\t});\n\t\t\t\t\t\trefresh_field(\"project_review\"); \n\t\t}}\n\t\t}),\n\t\tfrappe.call({\n\t\t\tmethod: \"ngse.custom_method.get_all_project_review\",\n\t\t   args:{'project_id':cur_frm.doc.name},\n\t\t   callback: (r) => {\n\t\t\t\t\t   if(r.message) {\n\t\t\t   console.log(r.message)\n\t\t\t\t   cur_frm.clear_table(\"project_review_2\");\n\t\t\t\t\t   r.message.forEach(function(element) {\n\t\t\t\t\t\t   var c = cur_frm.add_child(\"project_review_2\");\n\t\t\t\t\t\t   c.project_1 = element.name;\n\t\t\t\t\t\t   c.project = cur_frm.doc.name\n\t\t\t\t\t   });\n\t\t\t\t\trefresh_field(\"project_review_2\"); \n\t   \t\t\t\tcur_frm.save()\n\t   }}\n\t   })\n    }\n})  \n\n//email popup\nfrappe.views.CommunicationComposer =  frappe.views.CommunicationComposer.extend({\n    make_fun: function(){\n         var me = this;\n         var content_field = me.dialog.fields_dict.content;\n         var subject_field = me.dialog.fields_dict.subject; \n        var cc_field = me.dialog.fields_dict.cc;\n        frappe.db.get_single_value(\"Default Email CC\",\"project_cc\").then(val => {cc_field.set_input(val);})\n         var recipients_field = me.dialog.fields_dict.recipients; \n        var attach_document_print = me.dialog.fields_dict.attach_document_print;\n        frappe.db.get_single_value(\"Default Email CC\",\"project_attach_document_print\").then(val => {attach_document_print.set_input(val);})\n        },\n    make: function(){\n        this._super();\n        this.make_fun();\n    }\n});\n\nfrappe.ui.form.on(\"Project\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    // {label:__(\"Type of Interaction\"), fieldtype:\"Link\",'default': \"Follow Up Call\",\n    //                 options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n    //                 fieldname:\"type_of_interaction\"},\n    {label:__(\"Type of Interaction\"), fieldtype:\"Link\",'default': \"Follow Up Call\",\n                    options: \"Type of Interaction\",\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task',\n        'onchange':function(e){\n                d.set_df_property('comment',  'reqd',  this.get_value() ? 1 : 0);\n        }},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task','reqd':1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remark', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    console.log(c.next_date)\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remark: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    organization: frm.doc.customer_name,\n                    person_interacted_with: c.person_interacted_with,\n                    content:'',\n                    comment_email:'',\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    // type_of_interaction: c.type_of_interaction,\n                    interaction_type:c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n              //  doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    comment_email:\"\",\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    interaction_type:c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n              //  }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Project View Table",
  "modified": "2019-07-19 15:56:38.157364",
  "name": "Project View Table-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Project Review Table\",{\n\tvalidate:function(frm){\n\t\tfrm.set_value(\"naming_series\",\"\");\n\t\tif(frm.doc.type == \"Material\"){\n\t\t\tfrm.set_value(\"naming_series\",\"MR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Design\"){\n\t\t\tfrm.set_value(\"naming_series\",\"DR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Production\"){\n\t\t\tfrm.set_value(\"naming_series\",\"PR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Quality\"){\n\t\t\tfrm.set_value(\"naming_series\",\"QR.#####\")\n\t\t}\n\t\telse if(frm.doc.type == \"Sales\"){\n\t\t\tfrm.set_value(\"naming_series\",\"SR.#####\")\n\t\t}\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Task",
  "modified": "2019-07-23 15:22:16.411355",
  "name": "Task-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Task\",\"validate\",function(frm){\n    if (cur_frm.doc.assign_to){\n        frappe.call({\n\t\t\t\tmethod:'frappe.desk.form.assign_to.add',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: cur_frm.doc.doctype,\n\t\t\t\t\tname: cur_frm.doc.name,\n\t\t\t\t\tassign_to:  cur_frm.doc.assign_to,\n\t\t\t\t\tnotify: 1\n\t\t\t\t},\n\t\t\t\tcallback:function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [cur_frm.doc.assign_to]),\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n    }\n\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "NGSE BOM",
  "modified": "2020-06-24 12:25:07.270474",
  "name": "NGSE BOM-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('NGSE BOM' ,{\n\tget_stock_and_rate: function(frm) {\n\t\t\n\t\tconst dt = new DataTable(cur_frm.fields_dict['stock_and_rate'].wrapper, {\n\t\t\tcolumns: [\n\t\t\t\t{id:\"warehouse\",name: 'Warehouse'},\n\t\t\t\t{id:\"actual_qty\",name: 'Actual Stock',width:50, align:\"center\"},\n\t\t\t\t{id:\"uom\",name: 'UOM',width:90}\n\t\t\t],\n\t\t\tdata:[],\n\t\t\tlayout: 'fixed'\n\t\t\t});\n\t\tfrappe.call({\n                doc:cur_frm.doc,\n                method:\"get_stock_and_rate\",\n                \n                callback: function(r) { \n                    console.log(r.message);\n                    \n                    console.log(r.message[1])\n            \t\t\t\tconst data1 = r.message[0]\n            \t\t\t\tcur_frm.set_value(\"total_stock\",r.message[1])\n            \t\t\t\tcur_frm.set_value(\"value\",r.message[2]*cur_frm.doc.qty)\n            \t\t\t\tdt.refresh(data1);\n            \t\t\t\tcur_frm.save_or_update();\n                }\n\t\t})\n\t\t\n\t},\n\tget_current_stock:function(frm){\n\t    frm.trigger('get_stock_and_rate')\n\t},\n\titem_id:function(frm){\n\t    frm.trigger('get_stock_and_rate')\n\t},\n\tqty:function(frm){\n\t    frm.trigger('get_stock_and_rate')\n\t}\n\t\n}\n\n);"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Quotation",
  "modified": "2017-04-26 18:03:10.626892",
  "name": "Quotation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('contact_person_ii','email_id','contact_email_ii');\ncur_frm.add_fetch('contact_person_iii','email_id','contact_email_iii');\ncur_frm.add_fetch('customer','industry_type','industry');\n\nfrappe.ui.form.on(\"Quotation\", {\n    refresh: function(frm) {\n      if(frm.doc.docstatus == 2){\n          cur_frm.set_value(\"importance_closure\",\"Cancelled\");    \n          cur_frm.save_or_update();\n          console.log(\"In before cancel\")\n      }\n    }\n});\n\n\nfrappe.ui.form.on(\"Quotation\", \"transaction_date\", function(frm) {\n    var ddate = frappe.datetime.add_days(frm.doc.transaction_date,30);\n    cur_frm.set_value(\"validity_till\", ddate);\n});\nfrappe.ui.form.on(\"Quotation\", \"validate\", function(frm) {\n    var banttc = (frm.doc.budget*2 + frm.doc.authority*2 + frm.doc.need_from_the_client*1 + frm.doc.technically_qualified*2 + frm.doc.timing*1 + frm.doc.competitiveness*2)/10; \n\n    var nos=Math.round(banttc);  \n    var nos1 = Math.round(nos)%10;\n        var nos2 =0;\n    if (nos1 > 5 && nos <= 100)\n        {\n        nos2=nos+(10-nos1);\n        }\n    else if (nos1 < 5 && nos <= 100)\n        {\n        nos2=nos-nos1;\n        }\n    cur_frm.set_value(\"banttc_score\", nos2);\n});\nfrappe.ui.form.on(\"Quotation\", \"percent_advance_recievable\", function(frm) {\n    var a = parseFloat(frm.doc.percent_advance_recievable)\n    if(frm.doc.advance_on==\"Net Total\"){\n    var advance_amount = frm.doc.total*(a/100);\n    cur_frm.set_value(\"advance_recievable_with_order\", advance_amount);\n    }\n    else if(frm.doc.advance_on==\"Grand Total\"){\n    var advance_amount = frm.doc.rounded_total*(a/100);\n    cur_frm.set_value(\"advance_recievable_with_order\", advance_amount);\n    }\n});\nfrappe.ui.form.on(\"Quotation\", \"advance_on\", function(frm) {\n    var a = parseFloat(frm.doc.percent_advance_recievable)\n    if(frm.doc.advance_on==\"Net Total\"){\n    var advance_amount = frm.doc.total*(a/100);\n    cur_frm.set_value(\"advance_recievable_with_order\", advance_amount);\n    }\n    else if(frm.doc.advance_on==\"Grand Total\"){\n    var advance_amount = frm.doc.rounded_total*(a/100);\n    cur_frm.set_value(\"advance_recievable_with_order\", advance_amount);\n    }\n});\nfrappe.ui.form.on(\"Quotation\", \"onload\", function(frm) {\n    if(!frm.doc.submitted_by){\n    cur_frm.set_value(\"submitted_by\", frappe.user.name);\n    }\n});\nfrappe.ui.form.on(\"Quotation\", \"refresh\", function(frm, doctype, name) {\n    cur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n        var item = frappe.get_doc(cdt, cdn);\n        if(item.item_group_filter == \"All Item Groups\") {\n            return {query: \"erpnext.controllers.queries.item_query\"} \n        }\n        else { \n                    return {query: \"erpnext.controllers.queries.item_query\", \n                    filters: (doc.order_type === \"Maintenance\" ?\n                        {'is_service_item': 1, 'item_group': item.item_group_filter }:\n                        {'is_sales_item': 1,'item_group': item.item_group_filter })\n           }\n        }\n    }\n    cur_frm.set_query(\"contact_person_ii\", function() {\n        return {\n            \"filters\": {\n                \"customer_name\": frm.doc.customer_name\n            }\n        };\n    });\n    cur_frm.set_query(\"contact_person_iii\", function() {\n        return {\n            \"filters\": {\n                \"customer_name\": frm.doc.customer_name\n            }\n        };\n    });\n});\nfrappe.ui.form.on(\"Quotation\", \"onload\", function(frm) {\n    if(!frm.doc.validity_till){\n    var ddate = frappe.datetime.add_days(frm.doc.transaction_date,30);\n    cur_frm.set_value(\"validity_till\", ddate);\n    }\n});\ncur_frm.add_fetch('standard_reply','response','response');\nfrappe.views.CommunicationComposer =  frappe.views.CommunicationComposer.extend({\n    make_fun: function(){\n         var me = this;\n         var content_field = me.dialog.fields_dict.content;\n         var subject_field = me.dialog.fields_dict.subject; \n         var recipients_field = me.dialog.fields_dict.recipients; \n         var sub = me.dialog.fields_dict.subject.get_value();\n         var rec = me.dialog.fields_dict.recipients.get_value();\n         if(cur_frm.doc.subject){subject_field.set_input(sub+\"-\"+cur_frm.doc.subject);}\n         var custom_rec=\"\";\n         if(cur_frm.doc.contact_email_ii){custom_rec = custom_rec + \",\"+cur_frm.doc.contact_email_ii}\n         if(cur_frm.doc.contact_email_iii){custom_rec = custom_rec+ \",\"+cur_frm.doc.contact_email_iii}\n         recipients_field.set_input(rec + custom_rec +\",sales@nandan.co.in\")\n         recipients_field.set_input(rec + custom_rec +\",sales@nandan.co.in\")\n         content_field.set_input(\"<br><b>\"+cur_frm.doc.name+ \"<br>\"+cur_frm.doc.transaction_date+\"</b><br><br>To,<br> \"+cur_frm.doc.customer_name+\"<br>\"+cur_frm.doc.address_display+ \"<br><b>KIND ATTN: \"+cur_frm.doc.contact_display+\"</b><br><br>\"+cur_frm.doc.response);\n    },\n    make: function(){\n        this._super();\n        this.make_fun();\n    }\n});\n\n//add interaction\n\n//add interaction\nfrappe.ui.form.on(\"Quotation\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remark', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remark: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    organization: frm.doc.customer,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Opportunity",
  "modified": "2017-04-22 12:40:41.017685",
  "name": "Opportunity-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('customer','industry_type','industry');\nfrappe.ui.form.on(\"Opportunity\", \"transaction_date\", function(frm) {\n    var ddate = frappe.datetime.add_days(frm.doc.transaction_date,30);\n    cur_frm.set_value(\"probable_completion_date\", ddate);\n});\nfrappe.ui.form.on(\"Opportunity\", \"onload\", function(frm) {\n    if(!frm.doc.probable_completion_date){\n    var ddate = frappe.datetime.add_days(frm.doc.transaction_date,30);\n    cur_frm.set_value(\"probable_completion_date\", ddate);\n    }\n});\nfrappe.ui.form.on(\"Opportunity\", \"validate\", function(frm) {\n    var banttc = (frm.doc.budget*2 + frm.doc.authority*2 + frm.doc.need_from_the_client*1 + frm.doc.technically_qualified*2 + frm.doc.timing*1 + frm.doc.competitiveness*2)/10;\n    cur_frm.set_value(\"banttc_score\", banttc);\n});\n\n\n//add interaction\nfrappe.ui.form.on(\"Opportunity\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', fieldtype: 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n                    organization: frm.doc.customer,\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Lead",
  "modified": "2017-04-22 13:21:12.932995",
  "name": "Lead-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('contact1','email_id','contact_email_i');\ncur_frm.add_fetch('contact2','email_id','contact_email_ii');\ncur_frm.add_fetch('contact3','email_id','contact_email_iii');\nfrappe.views.CommunicationComposer =  frappe.views.CommunicationComposer.extend({\n    make_fun: function(){\n         var me = this;\n         var content_field = me.dialog.fields_dict.content;\n         var subject_field = me.dialog.fields_dict.subject; \n         var recipients_field = me.dialog.fields_dict.recipients;\n         var rec = me.dialog.fields_dict.recipients.get_value();\n         var custom_rec=\"\";\n         if(cur_frm.doc.contact_email_i){custom_rec = custom_rec + \",\"+cur_frm.doc.contact_email_i}\n         if(cur_frm.doc.contact_email_ii){custom_rec = custom_rec + \",\"+cur_frm.doc.contact_email_ii}\n         if(cur_frm.doc.contact_email_iii){custom_rec = custom_rec+ \",\"+cur_frm.doc.contact_email_iii}\n         recipients_field.set_input(rec + custom_rec +\",sales@nandan.co.in\") \n         recipients_field.set_input(rec + custom_rec +\",sales@nandan.co.in\")\n    },\n    make: function(){\n        this._super();\n        this.make_fun();\n    }\n});\nfrappe.ui.form.on(\"Lead\", \"refresh\", function(frm, doctype, name) {\n    cur_frm.set_query(\"contact1\", function() {\n        return {\n            \"filters\": {\n                \"customer_name\": frm.doc.customer\n            }\n        };\n    });\n    cur_frm.set_query(\"contact2\", function() {\n        return {\n            \"filters\": {\n                \"customer_name\": frm.doc.customer\n            }\n        };\n    });\n    cur_frm.set_query(\"contact3\", function() {\n        return {\n            \"filters\": {\n                \"customer_name\": frm.doc.customer\n            }\n        };\n    });\n});\n\n//add interaction\nfrappe.ui.form.on(\"Lead\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Order",
  "modified": "2017-04-22 13:00:45.144863",
  "name": "Sales Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Sales Order\", \"refresh\", function(frm, doctype, name) {\n    cur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n        var item = frappe.get_doc(cdt, cdn);\n        if(item.item_group_filter == \"All Item Groups\") {\n            return {query: \"erpnext.controllers.queries.item_query\"} \n        }\n        else { \n                    return {query: \"erpnext.controllers.queries.item_query\", \n                    filters: (doc.order_type === \"Maintenance\" ?\n                        {'is_service_item': 1, 'item_group': item.item_group_filter }:\n                        {'is_sales_item': 1,'item_group': item.item_group_filter })\n           }\n        }\n    }\n});\nfrappe.ui.form.on(\"Sales Order\", \"validate\", function(frm, doctype, name) {\n    frm.doc.net_total_for_adv = frm.doc.net_total;\n    frm.doc.grand_total_for_adv = frm.doc.grand_total;\n    frm.doc.total_tax = frm.doc.base_total_taxes_and_charges;\n});\ncur_frm.add_fetch('standard_reply','response','response');\nfrappe.views.CommunicationComposer =  frappe.views.CommunicationComposer.extend({\n    make_fun: function(){\n         var me = this;\n         var content_field = me.dialog.fields_dict.content;\n         var subject_field = me.dialog.fields_dict.subject;\n         var sub = me.dialog.fields_dict.subject.get_value();\n         subject_field.set_input(sub+\"-\"+cur_frm.doc.subject);\n         content_field.set_input(cur_frm.doc.response);\n    },\n    make: function(){\n        this._super();\n        this.make_fun();\n    }\n});\n\n//add interaction\nfrappe.ui.form.on(\"Sales Order\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    organization: frm.doc.customer,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Customer",
  "modified": "2017-04-22 12:46:08.576984",
  "name": "Customer-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\n//add interaction\nfrappe.ui.form.on(\"Customer\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Contact",
  "modified": "2017-04-22 13:05:00.360532",
  "name": "Contact-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.set_query('address_location', function (doc) {\n    if(doc.customer){\n        return {\n            filters: {\n                'customer' : doc.customer\n            }\n        }\n    }\n    else {\n        return {\n        filters: {\n                'address_type': 'Empty',\n            }\n        }\n    }\n});\n\n//add interaction\nfrappe.ui.form.on(\"Contact\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,r\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Purchase Order",
  "modified": "2015-11-03 12:08:33.440054",
  "name": "Purchase Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Purchase Order\", \"custom_onload\", function(frm) {\n    cur_frm.set_value(\"tc_name\", 'Purchase Turbhe');\n});\nfrappe.ui.form.on(\"Purchase Order\", \"refresh\", function(frm, doctype, name) {\n\tcur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n\t\tvar item = frappe.get_doc(cdt, cdn);\n\t\tif(item.item_group_filter == \"All Item Groups\") {\n\t\t    return {query: \"erpnext.controllers.queries.item_query\"} \n\t\t}\n\t\telse { \n                    return {query: \"erpnext.controllers.queries.item_query\", filters:{'item_group': item.item_group_filter,\n'is_purchase_item': 1 }\n\t\t   }\n\t\t}\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Purchase Receipt",
  "modified": "2015-06-28 01:07:48.753387",
  "name": "Purchase Receipt-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Purchase Receipt\", \"refresh\", function(frm, doctype, name) {\n\tcur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n\t\tvar item = frappe.get_doc(cdt, cdn);\n\t\tif(item.item_group_filter == \"All Item Groups\") {\n\t\t    return {query: \"erpnext.controllers.queries.item_query\"} \n\t\t}\n\t\telse { \n                    return {query: \"erpnext.controllers.queries.item_query\", filters:{'item_group': item.item_group_filter,\n'is_purchase_item': 'Yes' }\n\t\t   }\n\t\t}\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Purchase Invoice",
  "modified": "2015-06-08 16:51:03.973253",
  "name": "Purchase Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.cscript.refresh = function(doc) {\n\tcur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n\t\tvar item = frappe.get_doc(cdt, cdn);\n\t\tif(item.item_group_filter == \"All Item Groups\") {\n\t\t    return {query: \"erpnext.controllers.queries.item_query\"} \n\t\t}\n\t\telse { \n                    return {query: \"erpnext.controllers.queries.item_query\", filters:{'item_group': item.item_group_filter,\n'is_purchase_item': 'Yes' }\n\t\t   }\n\t\t}\n\t}\n};"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Delivery Note",
  "modified": "2015-06-08 17:01:55.619204",
  "name": "Delivery Note-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.cscript.refresh = function(doc) {\n\tcur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n\t\tvar item = frappe.get_doc(cdt, cdn);\n\t\tif(item.item_group_filter == \"All Item Groups\") {\n\t\t    return {query: \"erpnext.controllers.queries.item_query\"} \n\t\t}\n\t\telse { \n                    return {query: \"erpnext.controllers.queries.item_query\", \n                    filters: (doc.order_type === \"Maintenance\" ?\n\t\t\t\t\t\t{'is_service_item': 'Yes', 'item_group': item.item_group_filter }:\n\t\t\t\t\t\t{'is_sales_item': 'Yes','item_group': item.item_group_filter })\n\t\t   }\n\t\t}\n\t}\n};"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Invoice",
  "modified": "2017-04-22 13:08:06.294097",
  "name": "Sales Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.cscript.refresh = function(doc) {\n    cur_frm.fields_dict['items'].grid.get_field(\"item_code\").get_query = function(doc, cdt, cdn) {\n        var item = frappe.get_doc(cdt, cdn);\n        if(item.item_group_filter == \"All Item Groups\") {\n            return {query: \"erpnext.controllers.queries.item_query\"} \n        }\n        else { \n                    return {query: \"erpnext.controllers.queries.item_query\", \n                    filters: (doc.order_type === \"Maintenance\" ?\n                        {'is_service_item': 'Yes', 'item_group': item.item_group_filter }:\n                        {'is_sales_item': 'Yes','item_group': item.item_group_filter })\n           }\n        }\n    }\n};\n\n//add interaction\nfrappe.ui.form.on(\"Sales Invoice\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted With: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    organization: frm.doc.customer,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Jobmaster",
  "modified": "2017-04-22 12:58:04.118431",
  "name": "Jobmaster-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('sales_order_no','customer','customer');\nfrappe.ui.form.on(\"Jobmaster\", \"refresh\", function(frm, doctype, name) {\n    cur_frm.set_query(\"model\", function() {\n        if(frm.doc.product_family == \"All Item Groups\") {\n            return {query: \"erpnext.controllers.queries.item_query\"} \n        }\n        else { \n                    return {query: \"erpnext.controllers.queries.item_query\", \n                    filters: (frm.doc.order_type === \"Maintenance\" ?\n                        {'is_service_item': 'Yes', 'item_group': frm.doc.product_family }:\n                        {'is_sales_item': 'Yes','item_group': frm.doc.product_family })\n           }\n        };\n    });\n    cur_frm.set_query(\"sales_order_no\", function() {\n        return {\n            \"filters\": {\n                \"customer\": frm.doc.customer\n            }\n        };\n    });\n});\n\n\n//add interaction\nfrappe.ui.form.on(\"Jobmaster\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Nandan Stock",
  "modified": "2015-12-02 18:58:31.364995",
  "name": "Nandan Stock-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Nandan Stock\", \"qty_turbhe\", function(frm) {\n    var a = parseFloat(frm.doc.qty_turbhe)\n    var b = parseFloat(frm.doc.qty_khopoli)\n    cur_frm.set_value(\"total_qty\", a+b);\n});\nfrappe.ui.form.on(\"Nandan Stock\", \"qty_khopoli\", function(frm) {\n    var a = parseFloat(frm.doc.qty_turbhe)\n    var b = parseFloat(frm.doc.qty_khopoli)\n    cur_frm.set_value(\"total_qty\", a+b);\n});\nfrappe.ui.form.on(\"Nandan Stock\", \"validate\", function(frm) {\n    var valuation = frm.doc.total_qty*frm.doc.rate*frm.doc.factor*frm.doc.exchange_rate_bak;\n    cur_frm.set_value(\"valuation\", valuation);\n    cur_frm.set_value(\"stock_id\", frm.doc.name);\n});\nfrappe.ui.form.on(\"Nandan Stock\", \"currency\", function(frm) {\n   if(frm.doc.currency==\"USD\"){\n    cur_frm.set_value(\"exchange_rate_bak\", 66.77);\n   }\n   if(frm.doc.currency==\"INR\"){\n    cur_frm.set_value(\"exchange_rate_bak\", 1);\n   }\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Interaction Master",
  "modified": "2015-12-07 14:06:32.805053",
  "name": "Interaction Master-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Interaction Master\", \"date\", function(frm) {\n    var ddate = frappe.datetime.add_days(frm.doc.date,7);\n    cur_frm.set_value(\"next_action_date\", ddate);\n});\nfrappe.ui.form.on(\"Interaction Master\", \"onload\", function(frm) {\n    var ddate = frappe.datetime.add_days(frm.doc.date,7);\n    cur_frm.set_value(\"next_action_date\", ddate);\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Nandan DRR",
  "modified": "2016-02-18 17:05:31.937310",
  "name": "Nandan DRR-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Nandan DRR\", \"validate\", function(frm,doctype,name) {\n    frm.doc.score =  frm.doc.no_of_cold_calls * frm.doc.no_of_int_or_inst_calls_factor\n+ frm.doc.no_of_int_or_inst_calls * frm.doc.no_of_int_or_inst_calls_factor\n+ frm.doc.no_of_follow_up_calls * frm.doc.no_of_follow_up_calls_factor\n+ frm.doc.no_of_collection_calls * frm.doc.no_of_collection_calls_factor\n+ frm.doc.emails_sent_cold * frm.doc.emails_sent_cold_factor\n+ frm.doc.emails_for_follow_up_sent*frm.doc.emails_for_follow_up_sent_factor\n+ frm.doc.no_of_order_booked*frm.doc.no_of_order_booked_factor\n+ frm.doc.order_value*frm.doc.order_value_factor\n+ frm.doc.collection_in_rupees*frm.doc.collection_in_rupees_factor\n+ frm.doc.visits_created_from_calls *frm.doc.visits_created_from_calls_factor \n+ frm.doc.new_customer_visits*frm.doc.new_customer_visits_factor\n+ frm.doc.existing_customer_visits*frm.doc.existing_customer_visits_factor\n+ frm.doc.lost_customer_visits*frm.doc.lost_customer_visits_factor\n+ frm.doc.exhibition_or_conference_visit*frm.doc.exhibition_or_conference_visit_factor\n+ frm.doc.online_tender_downloaded_for_preparation*frm.doc.online_tender_downloaded_for_preparation_factor\n+ frm.doc.no_of_quotes_created*frm.doc.no_of_quotes_created_factor\n+ frm.doc.online_tender_uploaded_and_sent*frm.doc.online_tender_uploaded_and_sent_factor\n+ frm.doc.no_of_references*frm.doc.no_of_references_factor\n+ frm.doc.no_of_testimonials*frm.doc.no_of_testimonials_factor\n+ frm.doc.linkedin_contacts_added*frm.doc.linkedin_contacts_added_factor\n+ frm.doc.no_of_case_studies_made*frm.doc.no_of_case_studies_made_factor\n+ frm.doc.nos_clicked_from_campaigns*frm.doc.nos_clicked_from_campaigns_factor\n+ frm.doc.no_of_products_added_on_site*frm.doc.no_of_products_added_on_site_factor\n+ frm.doc.no_of_videos_completed*frm.doc.no_of_videos_completed_factor\n+ frm.doc.no_of_product_spec_sheets_created*frm.doc.no_of_product_spec_sheets_created_factor\n+ frm.doc.no_of_campaigns_created_and_sent*frm.doc.no_of_campaigns_created_and_sent_factor\n+ frm.doc.no_of_enquiries_from_resources*frm.doc.no_of_enquiries_from_resources_factor\n+ frm.doc.no_of_website_visitors_yesterday*frm.doc.no_of_website_visitors_yesterday_factor\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Nandan Supply Order",
  "modified": "2017-04-22 13:02:05.507236",
  "name": "Nandan Supply Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\n//add interaction\nfrappe.ui.form.on(\"Nandan Supply Order\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"ngse.custom_method.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remark: c.remark,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"ngse.custom_method.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});"
 }
]